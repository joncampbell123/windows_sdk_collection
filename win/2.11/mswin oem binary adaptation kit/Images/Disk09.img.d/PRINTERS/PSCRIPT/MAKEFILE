# Makefile for sample PostScript Windows Driver
# 
# Please note that this Makefile does NOT create the PostScript driver
# shipped in the Windows/286 Retail kit.  Use Microsoft C v5.10 to compile
# the .C files.  Use SLIBW.LIB in the \PRINTERS\LIB directory on this disk.
#        

#
# Create the various binary resources.  First create AFM.EXE which translates
# .AFM files into their .PFM equivlents:
#

afm.obj: afm.c pfm.h
    cl -c afm.c

charcode.obj: charcode.c pfm.h
    cl -c charcode.c

pfm.obj: pfm.c pfm.h globals.h
    cl -c pfm.c

etm.obj: etm.c pfm.h
    cl -c etm.c

afm.exe: afm.obj charcode.obj pfm.obj etm.obj
    link4 afm.obj charcode.obj pfm.obj etm.obj;

pfmdump.obj: pfmdump.c
    cl -c pfmdump.c

pfmdump.exe: pfmdump.obj
   link4 pfmdump;

#
# Do not be alarmed at the error messages generated by AFM.EXE  These are
# informational and denote that a particular character is missing from a
# .AFM file.
#

agb.pfm: agb.afm afm.exe
    afm agb.afm

agbo.pfm: agbo.afm afm.exe
    afm agbo.afm

agd.pfm: agd.afm afm.exe
    afm agd.afm

agdo.pfm: agdo.afm afm.exe
    afm agdo.afm

bd.pfm: bd.afm afm.exe
    afm bd.afm

bdi.pfm: bdi.afm afm.exe
    afm bdi.afm

bl.pfm: bl.afm afm.exe
    afm bl.afm

bli.pfm: bli.afm afm.exe
    afm bli.afm

cm.pfm: cm.afm afm.exe
    afm cm.afm

cb.pfm: cb.afm afm.exe
    afm cb.afm

cbo.pfm: cbo.afm afm.exe
    afm cbo.afm

co.pfm: co.afm afm.exe
    afm co.afm

hm.pfm: hm.afm afm.exe
    afm hm.afm

hb.pfm: hb.afm afm.exe
    afm hb.afm

hbo.pfm: hbo.afm afm.exe
    afm hbo.afm

ho.pfm: ho.afm afm.exe
    afm ho.afm

hvn.pfm: hvn.afm afm.exe
    afm hvn.afm

hvnb.pfm: hvnb.afm afm.exe
    afm hvnb.afm

hvnbo.pfm: hvnbo.afm afm.exe
    afm hvnbo.afm

hvno.pfm: hvno.afm afm.exe
    afm hvno.afm

ncb.pfm: ncb.afm afm.exe
    afm ncb.afm

ncbi.pfm: ncbi.afm afm.exe
    afm ncbi.afm

nci.pfm: nci.afm afm.exe
    afm nci.afm

ncr.pfm: ncr.afm afm.exe
    afm ncr.afm

pb.pfm: pb.afm afm.exe
    afm pb.afm

pbi.pfm: pbi.afm afm.exe
    afm pbi.afm

pi.pfm: pi.afm afm.exe
    afm pi.afm

pr.pfm: pr.afm afm.exe
    afm pr.afm

sm.pfm: sm.afm afm.exe
    afm sm.afm

tb.pfm: tb.afm afm.exe
    afm tb.afm

tbi.pfm: tbi.afm afm.exe
    afm tbi.afm

ti.pfm: ti.afm afm.exe
    afm ti.afm

tr.pfm: tr.afm afm.exe
    afm tr.afm

zc.pfm: zc.afm afm.exe
    afm zc.afm

zd.pfm: zd.afm afm.exe
    afm zd.afm

ld.pfm: ld.afm afm.exe
    afm ld.afm

ldo.pfm: ldo.afm afm.exe
    afm ldo.afm

lb.pfm: lb.afm afm.exe
    afm lb.afm

lbo.pfm: lbo.afm afm.exe
    afm lbo.afm

sd.pfm: sd.afm afm.exe
    afm sd.afm

sdi.pfm: sdi.afm afm.exe
    afm sdi.afm

sl.pfm: sl.afm afm.exe
    afm sl.afm

sli.pfm: sli.afm afm.exe
    afm sli.afm

pfmdir.obj: pfmdir.c afm.exe
    cl -c pfmdir.c

pfmdir.exe: pfmdir.obj
    link4 pfmdir;

apple1.dir: apple1.lst pfmdir.exe
    pfmdir apple1.lst

dp2665.dir: dp2665.lst pfmdir.exe
    pfmdir dp2665.lst

lino.dir: lino.lst pfmdir.exe
    pfmdir lino.lst

qmsps800.dir: qmsps800.lst pfmdir.exe
    pfmdir qmsps800.lst

ti.dir: ti.lst pfmdir.exe
    pfmdir ti.lst

ti08.dir: ti08.lst pfmdir.exe
    pfmdir ti08.lst

wang15.dir: wang15.lst pfmdir.exe
    pfmdir wang15.lst

apple2.dir: apple2.lst pfmdir.exe
    pfmdir apple2.lst

ibm1.dir: ibm1.lst pfmdir.exe
    pfmdir ibm1.lst

qmsps80p.dir: qmsps80p.lst pfmdir.exe
    pfmdir qmsps80p.lst

wang15fp.dir: wang15fp.lst pfmdir.exe
    pfmdir wang15fp.lst

dec40.dir: dec40.lst pfmdir.exe
    pfmdir dec40.lst

decln03r.dir: decln03r.lst pfmdir.exe
    pfmdir decln03r.lst

data2res.obj: data2res.c printers.h pscript.h
    cl -c -W2 data2res.c

data2res.exe: data2res.obj
    link4 data2res.obj;

#
# Recursively run DATA2RES.EXE until all .DTA files are defined and unchanged
# from run to run:
#

papersiz.dta: data2res.exe
        data2res

rgpaper.dta: data2res.exe
        data2res

pmpaper.dta: data2res.exe
        data2res

paperbin.dta: data2res.exe
        data2res

apple1.dta: data2res.exe
        data2res

apple2.dta: data2res.exe
        data2res

dp2665.dta: data2res.exe
        data2res

decln03r.dta: data2res.exe
        data2res

dec40.dta: data2res.exe
        data2res

ibm1.dta: data2res.exe
        data2res

lino.dta: data2res.exe
        data2res

ti08.dta: data2res.exe
        data2res

ti.dta: data2res.exe
        data2res

wang15.dta: data2res.exe
        data2res

wang15fp.dta: data2res.exe
        data2res

nullpr.dta: data2res.exe
        data2res

mkhead.obj: mkhead.c
    cl -c mkhead.c

mkhead.exe: mkhead.obj
    link4 mkhead;

header.bin: psprep.txt mkhead.c
    mkhead psprep.txt

#
# Create the .RES file:
#

pscript.res:	pscript.rc header.bin sm.pfm apple1.dir \
 wang15.dir pscript.h printers.h version.h rcinfo.h
    rc -r -e pscript.rc

#
# Compile the PSCRIPT.DRV source:
#

getdata.obj:  getdata.c pscript.h printers.h
    cl -W2 -u -d -c -Asnw -Gsw -Oas -Zpe -NT _GETDATA getdata.c

profile.obj:  profile.c pscript.h printers.h
    cl -W2 -u -d -c -Asnw -Gsw -Oas -Zpe -NT _PROFILE profile.c

realize.obj:	 realize.c pscript.h
    cl -W2 -u -d -c -Asnw -Gsw -Oas -Zpe -NT _RLZE realize.c

control.obj:  control.c pscript.h
    cl -W2 -u -d -c -Asnw -Gsw -Oas -Zpe -NT   _CNTRL control.c

dialog.obj:  dialog.c pscript.h printers.h
    cl -W2 -u -d -c -Asnw -Gsw -Oas -Zpe -NT  _DLG dialog.c

reset.obj:  reset.c pscript.h printers.h
    cl -W2 -u -d -c -Asnw -Gsw -Oas -Zpe -NT   _ENBL reset.c

disable.obj:  disable.c pscript.h printers.h
    cl -W2 -u -d -c -Asnw -Gsw -Oas -Zpe -NT _DSBL disable.c

fontdir.obj:  fontdir.c pscript.h printers.h
    cl -W2 -u -d -c -Asnw -Gsw -Oas -Zpe -NT _FONTDIR fontdir.c

enum.obj:  enum.c pscript.h printers.h
    cl -W2 -u -d -c -Asnw -Gsw -Oas -Zpe -NT _ENUM enum.c

kern.obj:  kern.c pscript.h printers.h
    cl -W2 -u -d -c -Asnw -Gsw -Oas -Zpe -NT _KERN kern.c

text.obj:  text.c pscript.h globals.h
    cl -W2 -u -d -c -Asnw -Gsw -Oas -Zpe -NT _TSEG text.c

exttext.obj:  exttext.c pscript.h globals.h
    cl -W2 -u -d -c -Asnw -Gsw -Oas -Zpe -NT _XSEG exttext.c

#
# This file should only be compiled and linked if the SIMULATE define is
# uncommented and set to 1 in the file TEXT.C.
#
#simulate.obj:  simulate.c pscript.h
#    cl -W2 -u -d -c -Asnw -Gsw -Oas -Zpe -NT _SIM #simulate.c

graph.obj:  graph.c pscript.h
    cl -W2 -u -d -c -Asnw -Gsw -Oas -Zpe -NT _GSEG graph.c

bitblt.obj:  bitblt.c pscript.h
    cl -W2 -u -d -c -Asnw -Gsw -Oas -Zpe -NT _GSEG bitblt.c

utils.obj:    utils.c pscript.h
        cl -W2 -u -d -c -Asnw -Gsw -Oas -Zpe utils.c

channel.obj:  channel.c pscript.h
    cl -W2 -u -d -c -Asnw -Gsw -Oas -Zpe -NT _IO channel.c

stubs.obj:  stubs.c pscript.h globals.h
    cl -W2 -u -d -c -Asnw -Gsw -Oas -Zpe -NT _STUBS stubs.c

heap.obj: heap.asm
    masm -z-t-b63 heap.asm;

scale.obj: scale.asm
    masm -z-t-b63 scale.asm;

trig.obj: trig.asm vttable.inc
    masm -z-t-b63 trig.asm;
                 
#
# If the SIMULATE flag in TEXT.C is true remember to add the
# SIMULATE.OBJ entry below and in PSCRIPT.LNK!
#                              

pscript.drv:    pscript.lnk pscript.def pscript.res getdata.obj realize.obj \
			utils.obj text.obj bitblt.obj profile.obj reset.obj kern.obj \
			channel.obj dialog.obj graph.obj heap.obj scale.obj disable.obj\
			stubs.obj trig.obj control.obj exttext.obj fontdir.obj enum.obj
    link4 @pscript.lnk
    mapsym pscript
    rc pscript.res
    erase pscript.drv
    ren pscript.exe pscript.drv
