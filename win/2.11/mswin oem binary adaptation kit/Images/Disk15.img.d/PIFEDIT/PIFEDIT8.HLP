DETERMINING HOW YOUR APPLICATION WILL BE DISPLAYED

How your application appears on the screen depends on

* the way the program uses system resources and hardware
* the way the program is configured
* the amount of memory reserved for the program

If Windows can't display a standard application in a window,
it gives the application the entire screen.

To experiment, run the program with the
Directly Modifies screen option not set. If the
application writes information outside its window, or you
see unexpected results on the screen, edit the PIF
file and select the Directly Modifies screen option.

You can also use the following guidelines to help
determine whether your application can run in a window:

* Does the application write directly to the screen (video
  buffer)?

  Many applications write directly to the screen instead
  of using DOS or other system conventions to display
  information (such as ANSI calls). These applications
  cannot run in a window. You need to select the
  Directly Modifies screen option if your application
  writes to the screen.


* Does the program display graphics?

  Standard applications that display bit-mapped graphics
  (not character-based) write directly to the screen
  and cannot run in a window.


* Does the application provide an installation option
  for running under different screen conventions?

  Applications that support ANSI screen drivers can run
  in a window. Programs that provide an option to run
  in a TopView window can generally run in a window.


* How much memory does the program require?

  If the memory requirements of the application and
  Windows together exceed the amount of available
  memory, then the application cannot run in a window.
  Windows will "step aside" and give the program the
  maximum amount of memory available.
*
*
