;/**[f******************************************************************
; * lmemcpy.a - 
; *
; * Copyright (C) 1988,1989 Aldus Corporation.  All rights reserved.
; * Copyright (C) 1989-1990 Microsoft Corporation.
; * Copyright (C) 1990,1991 Hewlett-Packard Company.
; *     All rights reserved.
; *     Company confidential.
; *
; **f]*****************************************************************/

		title	lmemcpy - byte mover
		page	60,132

; abstract
;
; this module contains a c-language callable routine for moving a block of
; bytes from one memory location to another.

		.xlist
?win=1		;compile with windows epilog/prolog
?plm=1		;we're playing the pascal calling sequence game

		include	cmacros.inc
		.list

	
sBegin	CODE
assumes	CS, CODE

cProc	lmemcpy,<FAR,PUBLIC>,<ds,si,es,di>
	parmD	dst
	parmD	src
	parmW	cnt

cBegin
	lds		si,src			;get source address
	les		di,dst			;get destination address
	mov		dx,es			;return destination as
	mov		ax,di			; value of the function
	mov		cx,cnt			;get count
	jcxz	$1				;out of here if zero
	cmp		dx,seg_src		;are destination and source in same segment?
	jne		$11				;no, assume non-overlapping
	cmp		di,si			;yes, is destination lower than source?
	jb		$11				;yes, move forward
	add		di,cx			;no, bump pointers to last byte
	dec		di
	add		si,cx
	dec		si
	std						;say "move'em backward"
	jmp short $12

$11:
	cld						;say "move'em forward"
$12:
	rep		movsb			; and move'em like crazy
$1:	cld						;leave d clear for c compiler
cEnd
sEnd
end
