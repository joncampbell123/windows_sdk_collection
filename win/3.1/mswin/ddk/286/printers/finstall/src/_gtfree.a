;/**[f******************************************************************
; * _gtfree.a - 
; *
; * Copyright (C) 1988,1989 Aldus Corporation.  All rights reserved.
; * Copyright (C) 1989-1990 Microsoft Corporation.
; * Copyright (C) 1990,1991 Hewlett-Packard Company.
; *     All rights reserved.
; *     Company confidential.
; *
; **f]*****************************************************************/

    title	_gtfree - get disk free space
    subttl	Copyright (C) 1987 Aldus Corporation.  All rights reserved.
    page	60,132

; abstract
;
; this module contains a c-language callable routine for invoking the dos
; function 0x36, get disk free space.

; History
;
; 01 aug 89	peterbe		Changed tab settings.
; 10/26/87 - v002 - msd - use Microsoft cmacros
; 02/10/84 - v001 - tcj - use structure definition for the diskinfo struc.
; 01/28/84 - v000 - tcj - original implementation for large model only.

; system includes
.xlist
?PLM = 1				;yes, plm conventions
?WIN = 1				;yes, follow windows calling conventions
include	cmacros.inc
include dosutils.h
.list

; _gtfree - get disk free space from dos.
;
; c-language declaration:
;
; 	int _gtfree(drive, lpInfo)
;	    BYTE drive;			/* drive, 0=default; 1=A; 26=Z */
;	    DISKINFO FAR *lpInfo;	/* disk information structure */
;
;	the DISKINFO structure is defined in the header file
;	\pcl\ink\dosutils.h
;
; returns:
;	the value of the function is either zero indicating SUCCESS or dos
;	error code 15, invalid drive specified.
;	in the SUCCESS case, the info structure is filled in with the
;	information returned by dos.
;
; reference:
;	ibm pc dos version 3.30 tech reference manual, page 6-109.

sBegin	CODE
assumes	CS, CODE

cProc	dos_gtfree,<FAR,PUBLIC>,<ds,si>
	parmB	drive
	parmD	lpInfo

cBegin
	mov	dl,drive		;get drive code
	mov	ah,36h			;set up for dos call
	int	21h			;get the disk free space from dos
	cmp	ax,0FFFFh		;invalid drive?
	jne	$1			;no, continue
	mov	ax,DOS_BADDRIVE		;yes, then say "invalid drive"
	jmp	$2			; and go return

$1:	lds	si,lpInfo		;get structure address in ds:si
	mov	[si].av_clusters,bx	;available clusters
	mov	[si].tt_clusters,dx	;total clusters
	mov	[si].b_sector,cx	;bytes per sector
	mov	[si].s_cluster,ax	;sectors per cluster
	xor	ax,ax			;say everything's cool

$2:	cld				;take no chances with dos
cEnd
sEnd
end
