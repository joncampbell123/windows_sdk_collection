#	PCLSRC.		This is the make file (NMAKE) for the SRC
#			subdirectory of the hppcl5a printer driver.
#			It is called by the main make file, HPPCL5A.
#
#	Copyright (C) 1989, 1990, 1991 Hewlett-Packard Company.
#	All Rights Reserved.
#

# PCLSRC
# makefile for HPPCL.DRV .OBJ files
# Copyright (C) 1989-1990 Microsoft Corp.
# HISTORY: 
# 23 Oct 91 VO  - Converted to NMAKE format.
# 06 sep 91 SD  - added drivinit.h for all files that depend on resource.h
# 05 sep 91 SD  - added build.h for all files that depend on resource.h
# 01 jUL 91 DTK - added truetype.h for reset.c
# 27 Jun 91 SD  - added devinstl.c
# 25 Jun 91 SD  - added build.h for options.c
# 20 Jun 91 SD  - added build.h for environ.c and devmode.c.
# 20 Jul 90 SJC - modified STDOPTS for optimization
#               - added instructions for dibtodev
# 08 Nov 91 DTK - removed pclstub - MS request

#
#	Primary Description Block
#
ALL     :	heap.obj \
		lstrncpy.obj \
		lmemcpy.obj \
		lmemset.obj \
		offsrect.obj \
		scanline.obj \
		dumputil.obj \
		wep.obj \
		_write.obj \
		facetbl.obj \
		charwdth.obj \
		control.obj \
		debug.obj \
		devcap.obj \
		devinstl.obj \
		devmode.obj \
		dlgutils.obj \
		dump.obj \
		enumobj.obj \
		environ.obj \
		escquery.obj \
		fntutils.obj \
		fontbld.obj \
		fontman.obj \
		fontutil.obj \
		lclstr.obj \
		memoman.obj \
		options.obj \
		paper.obj \
		physical.obj \
		qsort.obj \
		realize.obj \
		reset.obj \
		stubs.obj \
		transtbl.obj \
		truetype.obj \
		utils.obj \
		dibtodev.obj


CC=cl

LINK=link

LIBRARIAN=lib

STDOPTS=-W2 -u -c -Asnw -PLM -Gsw -Oas -Zpe
#STDOPTS=-W2 -u -c -Alnw -PLM -Gw -Od -Zpei
FSTOPTS=-W2 -u -c -Asnw -PLM -Oailt -Gsw -Zpe
#FSTOPTS=-W2 -u -c -Alnw -PLM -Od -Gw -Zpei

# This variable is used for fontutil.c to turn optimization off.
NOOPT=-W2 -u -c -Asnw -PLM -Od -Gsw -Zpe
#NOOPT=-W2 -u -c -Alnw -PLM -Od -Gw -Zpei

INCDIR=..\ink\\

heap.obj: heap.a
	MASM -I$(INCDIR) heap.a;

lstrncpy.obj: lstrncpy.a
	MASM -I$(INCDIR) lstrncpy.a;

lmemcpy.obj: lmemcpy.a
	MASM -I$(INCDIR) lmemcpy.a;

lmemset.obj: lmemset.a
	MASM -I$(INCDIR) lmemset.a;

offsrect.obj: offsrect.a
	MASM -I$(INCDIR) offsrect.a;

scanline.obj: scanline.asm
	MASM -I$(INCDIR) scanline;


# Use DUMP.A _or_ DUMP.C+DUMPUTIL.A, but not both ***************************
#
# We now compile both, to generate both drivers.
# dumpa.obj: dump.a $(INCDIR)device.i
# 	MASM -I$(INCDIR) dump.a, dumpa.obj;

# utilities for enhanced DUMP.C.  Depends on CMACROS.INC, GDIDEFS.INC

dumputil.obj: dumputil.a $(INCDIR)device.i
	MASM -I$(INCDIR) dumputil.a;

# WEP() function
wep.obj: wep.a
	MASM -I$(INCDIR) wep.a;

# not in 3.00 version.
#lasport.obj: lasport.a $(INCDIR)device.i $(INCDIR)ve_stack.i $(INCDIR)int31.i
#	MASM -I$(INCDIR) lasport.a;

_write.obj: _write.a
	MASM -I$(INCDIR) _write.a;

facetbl.obj: facetbl.a
	MASM -I$(INCDIR) facetbl.a;

charwdth.obj: charwdth.c \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)debug.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h \
$(INCDIR)resource.h \
$(INCDIR)drivinit.h \
$(INCDIR)truetype.h \
$(INCDIR)fontman.h \
$(INCDIR)build.h
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _CHARNESC charwdth.c

control.obj: control.c \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)debug.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h \
$(INCDIR)resource.h \
$(INCDIR)drivinit.h \
$(INCDIR)strings.h \
$(INCDIR)spool.h \
$(INCDIR)fontman.h \
$(INCDIR)memoman.h \
$(INCDIR)environ.h \
$(INCDIR)utils.h \
$(INCDIR)dump.h \
$(INCDIR)extescs.h \
$(INCDIR)paper.h \
$(INCDIR)truetype.h \
$(INCDIR)build.h \
message.c \
lockfont.c \
makefsnm.c \
loadfile.c
    $(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _ESCAPE control.c

debug.obj: debug.c \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)debug.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) debug.c
	$(LIBRARIAN) debug-+debug.obj;

devcap.obj: devcap.c \
$(INCDIR)nocrap.h \
$(INCDIR)hppcl.h \
$(INCDIR)resource.h \
$(INCDIR)drivinit.h \
$(INCDIR)debug.h \
$(INCDIR)environ.h \
$(INCDIR)utils.h \
$(INCDIR)paperfmt.h \
$(INCDIR)paper.h \
$(INCDIR)build.h
        $(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _DEVCAP devcap.c

devinstl.obj: devinstl.c \
$(INCDIR)strings.h \
$(INCDIR)lclstr.h \
$(INCDIR)build.h
        $(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _DEVINSTL devinstl.c

devmode.obj: devmode.c \
$(INCDIR)nocrap.h \
$(INCDIR)pfm.h \
$(INCDIR)hppcl.h \
$(INCDIR)resource.h \
$(INCDIR)drivinit.h \
$(INCDIR)fontman.h \
$(INCDIR)strings.h \
$(INCDIR)debug.h \
$(INCDIR)dlgutils.h \
$(INCDIR)environ.h \
$(INCDIR)utils.h \
$(INCDIR)paperfmt.h \
$(INCDIR)paper.h \
$(INCDIR)lclstr.h \
$(INCDIR)build.h \
getint.c
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _DEVMODE devmode.c

dlgutils.obj: dlgutils.c \
$(INCDIR)nocrap.h \
$(INCDIR)resource.h \
$(INCDIR)drivinit.h \
$(INCDIR)strings.h \
$(INCDIR)debug.h \
$(INCDIR)dlgutils.h \
$(INCDIR)build.h
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _DEVMODE dlgutils.c

# Use DUMP.A _or_ DUMP.C, but not both ************************************
#
dump.obj: dump.c \
 $(INCDIR)generic.h  $(INCDIR)printer.h  $(INCDIR)hppcl.h  $(INCDIR)debug.h \
 $(INCDIR)pfm.h  $(INCDIR)paperfmt.h  $(INCDIR)device.h  $(INCDIR)resource.h \
 $(INCDIR)fontman.h  $(INCDIR)strings.h  $(INCDIR)memoman.h  $(INCDIR)dump.h \
 $(INCDIR)build.h  $(INCDIR)drivinit.h
	 $(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _DUMP dump.c


enumobj.obj: enumobj.c
	$(CC) -I$(INCDIR) $(FSTOPTS) $(COPTS) -NT _STUBS enumobj.c

environ.obj: environ.c \
$(INCDIR)country.h \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)debug.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h \
$(INCDIR)resource.h \
$(INCDIR)drivinit.h \
$(INCDIR)strings.h \
$(INCDIR)environ.h \
$(INCDIR)utils.h \
$(INCDIR)version.h \
$(INCDIR)lclstr.h \
$(INCDIR)build.h \
getint.c
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _ENVIRON environ.c

escquery.obj: escquery.c \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)debug.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h \
$(INCDIR)truetype.h \
$(INCDIR)extescs.h
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _CHARNESC escquery.c

fntutils.obj: fntutils.c \
$(INCDIR)nocrap.h \
$(INCDIR)fntutils.h \
$(INCDIR)neededh.h \
$(INCDIR)debug.h
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _FNTUTILS fntutils.c

fontbld.obj: fontbld.c \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)debug.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h \
$(INCDIR)resource.h \
$(INCDIR)drivinit.h \
$(INCDIR)fontman.h \
$(INCDIR)fonts.h \
$(INCDIR)debug.h \
$(INCDIR)strings.h \
$(INCDIR)memoman.h \
$(INCDIR)fontpriv.h \
$(INCDIR)utils.h \
$(INCDIR)lclstr.h \
$(INCDIR)build.h \
getint.c
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _FONTBLD fontbld.c

fontman.obj: fontman.c \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)debug.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h \
$(INCDIR)resource.h \
$(INCDIR)drivinit.h \
$(INCDIR)fontman.h \
$(INCDIR)fonts.h \
$(INCDIR)debug.h \
$(INCDIR)strings.h \
$(INCDIR)fontpriv.h \
$(INCDIR)environ.h \
$(INCDIR)utils.h \
$(INCDIR)lclstr.h \
$(INCDIR)build.h \
lockfont.c
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _RESET fontman.c

fontutil.obj: fontutil.c \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)debug.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h \
$(INCDIR)resource.h \
$(INCDIR)drivinit.h \
$(INCDIR)fontman.h \
$(INCDIR)fonts.h \
$(INCDIR)utils.h \
$(INCDIR)memoman.h \
$(INCDIR)debug.h \
$(INCDIR)fix_r8.h \
$(INCDIR)truetype.h \
$(INCDIR)build.h \
lockfont.c \
makefsnm.c \
loadfile.c
	$(CC) -I$(INCDIR) $(NOOPT) $(COPTS) -NT _CHARNESC fontutil.c

lclstr.obj: lclstr.c \
$(INCDIR)version.h \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)debug.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h \
$(INCDIR)resource.h \
$(INCDIR)drivinit.h \
$(INCDIR)build.h
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) lclstr.c

memoman.obj: memoman.c \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)debug.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h \
$(INCDIR)resource.h \
$(INCDIR)drivinit.h \
$(INCDIR)fontman.h \
$(INCDIR)utils.h \
$(INCDIR)memoman.h \
$(INCDIR)truetype.h \
$(INCDIR)build.h \
lockfont.c \
makefsnm.c
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _PHYSICAL memoman.c

options.obj: options.c \
$(INCDIR)nocrap.h \
$(INCDIR)hppcl.h \
$(INCDIR)resource.h \
$(INCDIR)drivinit.h \
$(INCDIR)strings.h \
$(INCDIR)dlgutils.h \
$(INCDIR)build.h \
$(INCDIR)debug.h
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _OPTIONS options.c

paper.obj: paper.c \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h \
$(INCDIR)resource.h \
$(INCDIR)drivinit.h \
$(INCDIR)environ.h \
$(INCDIR)paperfmt.h \
$(INCDIR)paper.h \
$(INCDIR)debug.h \
$(INCDIR)build.h
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _PAPER paper.c

physical.obj: physical.c \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)debug.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h \
$(INCDIR)resource.h \
$(INCDIR)drivinit.h \
$(INCDIR)fontman.h \
$(INCDIR)strings.h \
$(INCDIR)utils.h \
$(INCDIR)memoman.h \
$(INCDIR)transtbl.h \
$(INCDIR)truetype.h \
$(INCDIR)build.h \
message.c
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _PHYSICAL physical.c

qsort.obj: qsort.c \
$(INCDIR)pfm.h \
$(INCDIR)qsort.h \
$(INCDIR)debug.h
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _ESCAPE qsort.c

realize.obj: realize.c \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)debug.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h \
$(INCDIR)resource.h \
$(INCDIR)drivinit.h \
$(INCDIR)fontman.h \
$(INCDIR)fonts.h \
$(INCDIR)truetype.h \
$(INCDIR)build.h \
lockfont.c
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _REALIZE realize.c

reset.obj: reset.c \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)debug.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h \
$(INCDIR)resource.h \
$(INCDIR)drivinit.h \
$(INCDIR)fontman.h \
$(INCDIR)strings.h \
$(INCDIR)environ.h \
$(INCDIR)utils.h \
$(INCDIR)dump.h \
$(INCDIR)paper.h \
$(INCDIR)truetype.h \
$(INCDIR)version.h \
$(INCDIR)build.h
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _RESET reset.c

stubs.obj: stubs.c \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)debug.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h \
$(INCDIR)resource.h \
$(INCDIR)drivinit.h \
$(INCDIR)fontman.h \
$(INCDIR)build.h
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _STUBS stubs.c

transtbl.obj: transtbl.c \
$(INCDIR)nocrap.h \
$(INCDIR)pfm.h \
$(INCDIR)transtbl.h \
$(INCDIR)hppcl.h \
$(INCDIR)resource.h \
$(INCDIR)drivinit.h \
$(INCDIR)debug.h \
$(INCDIR)build.h
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _TRANSTBL transtbl.c

truetype.obj: truetype.c \
$(INCDIR)generic.h \
$(INCDIR)truetype.h \
$(INCDIR)build.h \
lockfont.c
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) -NT _PHYSICAL truetype.c

utils.obj: utils.c \
$(INCDIR)generic.h \
$(INCDIR)printer.h \
$(INCDIR)hppcl.h \
$(INCDIR)debug.h \
$(INCDIR)pfm.h \
$(INCDIR)paperfmt.h \
$(INCDIR)device.h \
$(INCDIR)resource.h \
$(INCDIR)drivinit.h \
$(INCDIR)utils.h \
$(INCDIR)debug.h \
$(INCDIR)build.h
	$(CC) -I$(INCDIR) $(STDOPTS) $(COPTS) utils.c

#pclstub.obj: pclstub.c \
#$(INCDIR)printer.h \
#$(INCDIR)dosutils.h \
#$(INCDIR)fontpriv.h \
#$(INCDIR)hppcl.h \
#$(INCDIR)resource.h \
#$(INCDIR)drivinit.h \
#$(INCDIR)version.h \
#$(INCDIR)pfm.h \
#$(INCDIR)build.h
#	$(CC) -I$(INCDIR) -W2 -c pclstub.c

dibtodev.obj: dibtodev.c \
$(INCDIR)generic.h
	$(CC) -I$(INCDIR) $(FSTOPTS) -W3 -NT _DIB dibtodev.c

#pclstub.exe: pclstub.obj \
#_write.obj
#	$(LINK) pclstub+_write.obj,pclstub,,slibce;
#	copy pclstub.exe ..
