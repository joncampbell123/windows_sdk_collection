*% Adobe PostScript(R) Printer Description File
*% For "PS-R4081" version 47.0
*% Produced by "GETapd.ps" version 2.0 edit 47
*%
*% Copyright 1988 Adobe Systems Incorporated.  All Rights Reserved.
*% Permission is granted for redistribution of this file as
*% long as this copyright notice is intact and the contents
*% of the file is not altered in any way from its original form.
*%
*% The byte count of this file should be exactly 010730.
*%
*% Date: <2/5/1988>
*FormatVersion: "2.0"
*FileVersion: "1.0"
*LanguageVersion: English

*Product: "(PS-R4081)"
*PSVersion: "(47.0) 0"
*%NickName: "AST TurboLaser/PS v47.0"
*NickName: "AST TurboLaser/PS-R4081"

*% General Information and Defaults ===============
*ColorDevice: False
*FileSystem: True
*?FileSystem: " statusdict begin /initializedisk where{pop(True)}{(False)} ifelse = flush end"

*Throughput: "8"
*Password: "0"
*ExitServer: "serverdict begin exitserver"
*FreeVM: "1496970"
*Reset: "
serverdict begin 0 exitserver
systemdict /quit get exec
(WARNING : Printer Reset Failed.) = flush
"
*End
*VariablePaperSize: False

*DefaultResolution: 300dpi
*?Resolution: "
save
  initgraphics
  0 0 moveto currentpoint matrix defaultmatrix transform
  0 72 lineto currentpoint matrix defaultmatrix transform
  3 -1 roll sub dup mul
  3 1 roll exch sub dup mul
  add sqrt round cvi
  (          ) cvs print (dpi) = flush
restore
"
*End

*% Halftone Information ===============
*ScreenFreq: "60.0"
*ScreenAngle: "45.0"
*DefaultScreenProc: Dot
*ScreenProc Dot: "
{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 
sub }{dup mul exch dup mul add 1 exch sub }ifelse }
"
*End
*ScreenProc Line: "{ pop }"
*ScreenProc Ellipse: "{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub }"

*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"
*Transfer Normalized: "{ }"
*Transfer Normalized.Inverse: "{ 1 exch sub }"

*% Paper Handling ===================

*% Use these entries to set paper size most of the time, unless there is
*% specific reason to use PageRegion or PaperTray.
*DefaultPageSize: Letter
*PageSize Letter: "statusdict begin lettertray end"
*PageSize A4: "statusdict begin a4tray end"
*?PageSize: "
 save statusdict begin
 /papersize where{ pop
  12 dict begin
   /lettertray (Letter) def /legaltray (Legal) def
   /11x17tray (Tabloid) def /ledgertray (Ledger) def
   /a3tray (A3) def /a4tray (A4) def
   /a5tray (A5) def /b4tray (B4) def
   /b5tray (B5) def /executivetray (Executive) def
   papersize {
     {load exec} stopped not{= flush}if
   }{
     {load exec} stopped not{print (.Transverse) = flush}if
   }ifelse
  end
 }{
  /pagetype where{pop[(Letter)(Legal)]pagetype dup 1 gt{pop 1}if get = flush}if
 }ifelse
 end restore
"
*End

*% These entries will set up the frame buffer. Usually used with manual feed.
*DefaultPageRegion: Letter
*PageRegion Letter: "letter"
*PageRegion A4: "a4"

*% These entries will invoke a particular tray--error may occur if tray is not inserted.
*% These errors should be trapped by software and a message displayed
*DefaultPaperTray: None
*PaperTray Letter: "statusdict begin lettertray end"
*PaperTray A4: "statusdict begin a4tray end"

*% The following entries provide information about specific paper keywords.
*DefaultImageableArea: Letter
*ImageableArea Letter: "18 8 593 775"
*ImageableArea A4: "18 17 577 825"
*?ImageableArea: "
 save /cvp { cvi (            ) cvs print ( ) print } bind def
  newpath clippath pathbbox
  4 -2 roll exch 2 {ceiling cvp} repeat
  exch 2 {floor cvp} repeat flush
 restore
"
*End

*% These provide the physical dimensions of the paper (by keyword)
*DefaultPaperDimension: Letter
*PaperDimension Letter: "612 792"
*PaperDimension A4: "595 842"

*DefaultOutputBin: Upper
*DefaultInputSlot: None

*DefaultManualFeed: None

*DefaultOutputOrder: Normal

*DefaultCollator: None
*DefaultSorter: None
*DefaultDuplex: None

*% Font Information =====================

*DefaultFont: Courier
*Font AvantGarde-Book: Standard "(001.001)"
*Font AvantGarde-BookOblique: Standard "(001.001)"
*Font AvantGarde-Demi: Standard "(001.001)"
*Font AvantGarde-DemiOblique: Standard "(001.001)"
*Font Bookman-Demi: Standard "(001.001)"
*Font Bookman-DemiItalic: Standard "(001.001)"
*Font Bookman-Light: Standard "(001.001)"
*Font Bookman-LightItalic: Standard "(001.001)"
*Font Courier: Standard "(001.004)"
*Font Courier-Bold: Standard "(001.004)"
*Font Courier-BoldOblique: Standard "(001.004)"
*Font Courier-Oblique: Standard "(001.004)"
*Font Helvetica: Standard "(001.001)"
*Font Helvetica-Bold: Standard "(001.001)"
*Font Helvetica-BoldOblique: Standard "(001.001)"
*Font Helvetica-Condensed: Standard "(001.001)"
*Font Helvetica-Condensed-Bold: Standard "(001.001)"
*Font Helvetica-Condensed-BoldObl: Standard "(001.001)"
*Font Helvetica-Condensed-Oblique: Standard "(001.001)"
*Font Helvetica-Oblique: Standard "(001.001)"
*Font NewCenturySchlbk-Bold: Standard "(001.002)"
*Font NewCenturySchlbk-BoldItalic: Standard "(001.001)"
*Font NewCenturySchlbk-Italic: Standard "(001.001)"
*Font NewCenturySchlbk-Roman: Standard "(001.002)"
*Font Palatino-Bold: Standard "(001.001)"
*Font Palatino-BoldItalic: Standard "(001.001)"
*Font Palatino-Italic: Standard "(001.002)"
*Font Palatino-Roman: Standard "(001.001)"
*Font Symbol: Special "(001.001)"
*Font Times-Bold: Standard "(001.001)"
*Font Times-BoldItalic: Standard "(001.001)"
*Font Times-Italic: Standard "(001.001)"
*Font Times-Roman: Standard "(001.001)"
*Font ZapfChancery-MediumItalic: Standard "(001.002)"
*Font ZapfDingbats: Special "(001.000)"
*?FontQuery: "
save  4 dict begin /sv exch def
/str (fonts/                              ) def
/st2 30 string def
{
  count 0 gt {
    dup FontDirectory exch known {pop 1}{
     str exch st2 cvs dup length /len exch def
     6 exch putinterval str 0 len 6 add getinterval mark exch
     { } st2 filenameforall counttomark 0 gt {
      cleartomark 1}{cleartomark 0}ifelse
    }ifelse = flush
  }{ exit } ifelse
} bind loop sv end restore
"
*End

*?FontList: "
FontDirectory { pop == flush } forall 
/filenameforall where { 
 pop save (fonts/*) { 
  dup length 6 sub 6 exch getinterval == flush 
 } 128 string filenameforall restore
} if 
(*) = flush
"
*End

*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% Status (format: %%[ status: <one of these> ]%% )
*Status: "idle"
*Status: "busy"
*Status: "waiting"
*Status: "printing"
*Status: "warming up"
*Status: "PrinterError: main motor error"
*Status: "PrinterError: internal controller memory error"
*Status: "PrinterError: paper exit jam"
*Status: "PrinterError: out of toner"
*Status: "PrinterError: OPC synchronous mark error"
*Status: "PrinterError: paper feed error"
*Status: "PrinterError: toner collection container full"
*Status: "PrinterError: optical error"
*Status: "PrinterError: timeout"
*Status: "PrinterError: tray cover open"
*Status: "PrinterError: paper transporter jam"
*Status: "PrinterError: poor fusing set"
*Status: "PrinterError: poor developer set"
*Status: "PrinterError: OPC belt bad"
*Status: "PrinterError: OPC belt bad & toner empty"
*Status: "PrinterError: out of paper"
*Status: "PrinterError: fusing error"
*Status: "PrinterError: timeout, clearing printer"
*Status: "PrinterError: paper entry misfeed"
*Status: "PrinterError: service call"
*Status: "PrinterError: no toner cartridge"
*Status: "PrinterError: no paper tray"
*Status: "PrinterError: resetting printer"
*Status: "PrinterError: manual feed timeout"

*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "serial9"
*Source: "serial25"
*Source: "AppleTalk"
*Source: "Centronics"

*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)
*PrinterError: "main motor error"
*PrinterError: "internal controller memory error"
*PrinterError: "paper exit jam"
*PrinterError: "out of toner"
*PrinterError: "OPC synchronous mark error"
*PrinterError: "paper feed error"
*PrinterError: "toner collection container full"
*PrinterError: "optical error"
*PrinterError: "timeout"
*PrinterError: "tray cover open"
*PrinterError: "paper transporter jam"
*PrinterError: "poor fusing set"
*PrinterError: "poor developer set"
*PrinterError: "OPC belt bad"
*PrinterError: "OPC belt bad & toner empty"
*PrinterError: "out of paper"
*PrinterError: "fusing error"
*PrinterError: "timeout, clearing printer"
*PrinterError: "paper entry misfeed"
*PrinterError: "service call"
*PrinterError: "no toner cartridge"
*PrinterError: "no paper tray"
*PrinterError: "resetting printer"
*PrinterError: "manual feed timeout"

*DeviceAdjustMatrix: "[1 0 0 1 0 0]"

*% Color Separation Information =====================

*DefaultColorSep: ProcessCyan.60lpi/60 lpi

*InkName: ProcessCyan/Process Cyan
*InkName: ProcessMagenta/Process Magenta
*InkName: ProcessYellow/Process Yellow
*InkName: ProcessBlack/Process Black
*InkName: CustomColor/Custom Color

*ColorSepScreenAngle ProcessCyan.60lpi/60 lpi: "15"
*ColorSepScreenAngle ProcessMagenta.60lpi/60 lpi: "75"
*ColorSepScreenAngle ProcessYellow.60lpi/60 lpi: "0"
*ColorSepScreenAngle ProcessBlack.60lpi/60 lpi: "45"
*ColorSepScreenAngle CustomColor.60lpi/60 lpi: "45"

*ColorSepScreenFreq ProcessCyan.60lpi/60 lpi: "60"
*ColorSepScreenFreq ProcessMagenta.60lpi/60 lpi: "60"
*ColorSepScreenFreq ProcessYellow.60lpi/60 lpi: "60"
*ColorSepScreenFreq ProcessBlack.60lpi/60 lpi: "60"
*ColorSepScreenFreq CustomColor.60lpi/60 lpi: "60"

*ColorSepScreenProc ProcessCyan.60lpi/60 lpi: "
{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 
sub }{dup mul exch dup mul add 1 exch sub }ifelse }"
*End
*ColorSepScreenProc ProcessMagenta.60lpi/60 lpi: "
{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 
sub }{dup mul exch dup mul add 1 exch sub }ifelse }"
*End
*ColorSepScreenProc ProcessYellow.60lpi/60 lpi: "
{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 
sub }{dup mul exch dup mul add 1 exch sub }ifelse }"
*End
*ColorSepScreenProc ProcessBlack.60lpi/60 lpi: "
{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 
sub }{dup mul exch dup mul add 1 exch sub }ifelse }"
*End
*ColorSepScreenProc CustomColor.60lpi/60 lpi: "
{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 
sub }{dup mul exch dup mul add 1 exch sub }ifelse }"
*End

*ColorSepTransfer ProcessCyan.60lpi/60 lpi: "{ }"
*ColorSepTransfer ProcessMagenta.60lpi/60 lpi: "{ }"
*ColorSepTransfer ProcessYellow.60lpi/60 lpi: "{ }"
*ColorSepTransfer ProcessBlack.60lpi/60 lpi: "{ }"
*ColorSepTransfer CustomColor.60lpi/60 lpi: "{ }"

*% end of PPD file for PS-R4081
