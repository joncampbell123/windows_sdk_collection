	.xlist
;----------------------------Module-Header------------------------------;
; Module Name: PDEVICE.BLT
;
; Subroutine for processing the physical device data structures.
;
; Created: In Windows' distant past (c. 1983)
;
; Copyright (c) 1983 - 1987  Microsoft Corporation
;
; This file is part of a set that makes up the Windows BitBLT function
; at driver-level.
;-----------------------------------------------------------------------;
	.list



;----------------------------Private-Routine----------------------------;
; pdevice_processing
;
; Check the required bitmaps for validity, get their parameters
; and store the information locally.
;
; If a brush (pattern) is required, get the address of the bits
; making up the pattern.
;
; If an invalid bitmap is encountered, abort.
;
; Entry:
;	BL = Initial gl_the_flags
;	     F0_SRC_PRESENT set is source needed
;	     F0_PAT_PRESENT set if pattern needed
; Returns:
;	Carry flag clear if no error.
;	BH = gl_the_flags (not saved on frame yet)
; Error Returns:
;	Carry flag set if error (null pointer to source device, when
;		one is expected; error returned from copy_dev).
; Registers Preserved:
;	BL,CX,DX,BP
; Registers Destroyed:
;	AX,BH,SI,DI,DS,ES,flags
; Calls:
;	copy_dev
; History:
;  Sun 22-Feb-1987 16:29:09 -by-  Walt Moore [waltm]
; Created.
;-----------------------------------------------------------------------;

;------------------------------Pseudo-Code------------------------------;
; {
; }
;-----------------------------------------------------------------------;

pdevice_processing	proc	near

	mov	ax,ss			;Set ES to frame segment
	mov	es,ax
	xor	bh,bh			;BH = real gl_the_flags

	test	bl,F0_SRC_PRESENT	;Is a source needed?
	jz	pdevice_decode_dest	;  No, skip source validation

	lds	si,lpSrcDev		;Get pointer to source
	mov	ax,ds			;Null pointer?
	or	ax,si
	jz	pdevice_error		;Null pointer, error, abort
	lea	di,gl_src		;--> where parameters will go
	call	copy_dev 		;Get all the data
	jc	pdevice_error



;	Decode the destination parameters.  All BLTs must have a destination.

pdevice_decode_dest:
	lds	si,lpDestDev		;Get pointer to destination
	lea	di,gl_dest 		;--> where parameters will go
	call	copy_dev 		;Get all the data
	jc	pdevice_error


;	The pattern fetch code will be based on the color format of the
;	destination.  If the destination is mono, then a mono fetch will be
;	performed.  If the destination is color, then a color fetch will be
;	performed.

	or	bh,bl			;Merge in F0_SRC_PRESENT, F0_PAT_PRESENT

pdevice_proc_end:
	clc
	ret

pdevice_error:
	stc
	ret

pdevice_processing	endp


