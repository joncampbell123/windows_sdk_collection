{\rtf1\ansi \deff0{\fonttbl{\f0\froman Tms Rmn;}{\f1\fdecor Symbol;}{\f2\fswiss Helv;}{\f3\fswiss Arial;}{\f4\froman Times New Roman;}{\f5\froman NewCenturySchlbk;}{\f6\fswiss AvantGarde;}}{\colortbl;\red0\green0\blue0;
\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;}{\stylesheet{\s244 \f4\fs16\up6 \sbasedon0\snext0 footnote reference;}{\s245 \f4\fs20 
\sbasedon0\snext245 footnote text;}{\f4 \snext0 Normal;}}{\info{\author sdfgsdfg}{\operator sdfgsdfg}{\creatim\yr1991\mo10\dy14\hr19\min12}{\revtim\yr1991\mo10\dy14\hr19\min13}{\version2}{\edmins155}{\nofpages0}{\nofwords65536}{\nofchars65536}{\vern8368}}
\widowctrl\ftnbj \sectd \linex0\endnhere \pard\plain \keepn \f4 {\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} JumpContents_Topic}!{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 !}
  EnableButton("Execute_Button");ChangeButtonBinding("Execute_Button","JumpContents(`MACROHLP.HLP')")}${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} JumpContents Demonstration}K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K}
 JumpContents();Contents()}+{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Demos:165}}{\b\f3\fs28  JumpContents(}{\f3 "filename"}{\b\f3\fs28 )
\par }\pard 
\par This macro jumps to the contents topic of a specified file within the Help file. The contents topic is indicated by the CONTENTS option entry in the [OPTIONS] section of .HPJ file. If the CONTENTS option is 
not specified, WinHelp jumps to the first topic in the Help file.
\par 
\par \trowd \trgaph108\trleft-108 \cellx2052\cellx7812\pard \intbl {\b\fs28 Parameter\cell Description\cell }\pard \intbl {\b\fs28 \row }\trowd \trgaph108\trleft-108 \cellx2052\cellx7812\pard \intbl filename\cell 
The name of the destination file for the jump. If WinHelp cannot find this file, it displays an error message and does not perform the jump.\cell \pard \intbl \row \pard 
\par WinHelp ignores this macro if it is executed in a secondary window.
\par 
\par \trowd \trgaph108\trleft-108 \cellx2052\cellx7812\pard \intbl {\b Execute Button:\cell }Jumps to the first topic of the MACROHLP.HLP file\cell \pard \intbl \row \pard \keepn \page {\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #}
 JumpId_Topic}} {\fs16\up6 !{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 !} EnableButton("Execute_Button");ChangeButtonBinding("Execute_Button","JI(`MACROHLP.HLP',`MacroDemonstration_Topic')")}} {\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {
\fs16\up6 $} JumpId Demonstration}} {\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} JumpId();JI();}+{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Demos:170}} {\b\f3\fs28 JumpId(}{\f3 "filename", "context-string"}{\b\f3\fs28 ) or JI(}
{\f3 "filename", "context-string"}{\b\f3\fs28 )
\par }\pard 
\par This macro jumps to the topic with the specified context string in the Help file.
\par 
\par \trowd \trgaph108\trleft-108 \cellx2052\cellx7812\pard \intbl {\b\fs28 Parameter\cell Description\cell }\pard \intbl {\b\fs28 \row }\trowd \trgaph108\trleft-108 \cellx2052\cellx7812\pard \intbl filename\cell 
Name of the .HLP file containing the context string. The filename must appear in quotation marks. If WinHelp does not find this file, it displays an error message and does not perform the jump.
\par \cell \pard \intbl \row \trowd \trgaph108\trleft-108 \cellx2052\cellx7812\pard \intbl context-string\cell 
Context string of the topic in the destination file. The context string must appear in quotation marks. If the context string does not exist, WinHelp jumps to the contents topic for that file instead. \cell \pard \intbl \row \pard 
\par \trowd \trgaph108\trleft-108 \cellx2052\cellx7812\pard \intbl {\b Execute Button:\cell }The index of the macro demonstrations should appear.\cell \pard \intbl \row \pard \keepn \page {\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #}
 JumpKeyword_Topic}} {\fs16\up6 !{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 !} EnableButton("Execute_Button");ChangeButtonBinding("Execute_Button","JumpKeyword(`MACROHLP.HLP',`About()')")}} {\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {
\fs16\up6 $} JumpKeyword Demonstration}K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} JumpKeyword();}+{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Demos:175}} {\b\f3\fs28 JumpKeyword(}{\f3 "filename", "keyword"}{\b\f3\fs28 )
\par }\pard 
\par This macro loads the indicated .HLP file, searches through the K keyword table, and displays the first topic containing the index keyword specified in the macro.
\par 
\par \trowd \trgaph108\trleft-108 \cellx2052\cellx7812\pard \intbl {\b\fs28 Parameter\cell Description\cell }\pard \intbl {\b\fs28 \row }\trowd \trgaph108\trleft-108 \cellx2052\cellx7812\pard \intbl filename\cell 
The name of the .HLP file containing the desired keyword table. The filename must appear in quotation marks. If this file does not exist, WinHelp displays an error message and does not perform the jump.
\par \cell \pard \intbl \row \trowd \trgaph108\trleft-108 \cellx2052\cellx7812\pard \intbl keyword\cell 
The keyword that the macro searches for. The keyword must appear in quotation marks. If WinHelp finds more than one match, it displays the first matched topic. If it does not find any matches, it displays a "Not a keyword" message and displays the content
s topic of the destination file instead.\cell \pard \intbl \row \pard 
\par \trowd \trgaph108\trleft-108 \cellx2052\cellx7812\pard \intbl {\b Execute Button:\cell }Jumps to the first topic that has the About() Keyword defined.\cell \pard \intbl \row \pard \keepn \page {\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #
} Next_Topic}} {\fs16\up6 !{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 !} EnableButton("Execute_Button");ChangeButtonBinding("Execute_Button","Next()")}} {\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Next Demonstration}K{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 K} Next();Browse Sequence}} {\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Demos:180}} {\b\f3\fs28 Next()
\par }\pard 
\par This macro displays the next topic in the browse sequence for the Help file. If the currently displayed topic is the last topic of a browse sequence, this macro does nothing.
\par 
\par WinHelp ignores this macro if it is executed in a secondary window.
\par 
\par \pard \intbl {\b Execute Button:\cell }Goes to the {\uldb Not}{\v Not_Topic} macro demonstration topic, which is the next item in the browse sequence.\cell \pard \intbl \row \pard \keepn \page {\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #
} Not_Topic}} {\fs16\up6 !{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 !} EnableButton("Execute_Button");ChangeButtonBinding("Execute_Button","IfThen(Not(IsMark(`Test_Mark')),`JI(`MACROHLP.HLP',`NoMark_Topic')')")}} {\fs16\up6 ${\footnote \pard\plain 
\s245 \f4\fs20 {\fs16\up6 $} Not Demonstration}} {\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} Not();IsMark();IfThen();IfThenElse();SaveMark()}} {\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Demos:185}} {\b\f3\fs28 Not(
}{\f3\uldb IsMark}{\v IsMark_Topic}{\f3 ("marker-text")}{\b\f3\fs28 )
\par }\pard 
\par This macro reverses the true or false result returned by the {\uldb IsMark}{\v IsMark_Topic} macro. It is used along with the {\uldb IsMark}{\v IsMark_Topic} macro as a parameter to the conditional macros {\uldb IfThen}{\v IfThen_Topic} and {\uldb 
IfThenElse}{\v IfThenElse_Topic}.
\par 
\par \trowd \trgaph108\trleft-108 \cellx2052\cellx7812\pard \intbl {\b\fs28 Parameter\cell Description\cell }\pard \intbl {\b\fs28 \row }\trowd \trgaph108\trleft-108 \cellx2052\cellx7812\pard \intbl marker-text\cell Marker text tested by the {\uldb IsMark}{\v 
IsMark_Topic} macro. The Not macro returns a false value if the mark exists or a true value if it does not.\cell \pard \intbl \row \pard 
\par \trowd \trgaph108\trleft-108 \cellx2052\cellx7812\pard \intbl {\b Execute Button:\cell }If the {\uldb SaveMark}{\v SaveMark_Topic} macro has not been executed, then the "Not Marked" topic will be displayed.\cell \pard \intbl \row \pard \keepn \page {
\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} PopupId_Topic}} {\fs16\up6 !{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 !} EnableButton("Execute_Button");ChangeButtonBinding("Execute_Button","PI(`MACROHLP.HLP',`Test_Topic')")}} {
\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} PopupId Demonstration}K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} PopupId();}+{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Demos:190}} {\b\f3\fs28 PopupId(}{\f3 
"filename", "context-string"}{\b\f3\fs28 )
\par }\pard 
\par This macro displays a topic from a specified file in a popup window.
\par 
\par \trowd \trgaph108\trleft-108 \cellx2052\cellx7812\pard \intbl {\b\fs28 Parameter\cell Description\cell }\pard \intbl {\b\fs28 \row }\trowd \trgaph108\trleft-108 \cellx2052\cellx7812\pard \intbl filename\cell 
The name of the file containing the popup-window topic. If this file does not exist, WinHelp displays a warning.
\par \cell \pard \intbl \row \trowd \trgaph108\trleft-108 \cellx2052\cellx7812\pard \intbl context-string\cell 
Context string of the topic in the destination file. If the requested context string does not exist, WinHelp displays the contents topic or the first topic in the file. \cell \pard \intbl \row \pard 
\par \trowd \trgaph108\trleft-108 \cellx2052\cellx7812\pard \intbl {\b Execute Button:\cell }Shows the Test Button topic in a pop-up window.\cell \pard \intbl \row \pard \keepn \page {\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} Prev_Topic}} 
{\fs16\up6 !{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 !}  EnableButton("Execute_Button");ChangeButtonBinding("Execute_Button","Prev()")}} {\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Prev Demonstration}} {\fs16\up6 K{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 K} Prev();Browse Sequence}} {\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Demos:195}} {\b\f3\fs28 Prev()
\par }\pard 
\par This macro displays the previous topic in the browse sequence for the Help file. If the currently displayed topic is the first topic of a browse sequence, this macro does nothing.
\par 
\par WinHelp ignores this macro if it is executed in a secondary window.
\par 
\par \pard \intbl {\b Execute Button:\cell }\pard \intbl\tx6570 Shows the {\uldb PopupId}{\v PopupId_Topic} macro demonstration topic, which is the previous topic in the browse list.\cell \pard \intbl \row \pard \page {\fs16\up6 #{\footnote \pard\plain \s245 
\f4\fs20 {\fs16\up6 #} Print_Topic}} {\fs16\up6 !{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 !}  EnableButton("Execute_Button");ChangeButtonBinding("Execute_Button","Print()")}} {\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $}
 Print Demonstration}} {\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} Print()}} {\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Demos:200}} {\b\f3\fs28 Print()
\par }
\par This macro sends the currently displayed topic to the printer. It should be used only to print topics in windows other than the main WinHelp window (for example, topics in a secondary window).
\par 
\par Use of the macro in secondary windows is discouraged.
\par 
\par \pard \intbl {\b Execute Button:\cell }Prints this topic.\cell \pard \intbl \row \pard \keepn \page {\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} PrinterSetup_Topic}} {\fs16\up6 !{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 !}
  EnableButton("Execute_Button");ChangeButtonBinding("Execute_Button","PrinterSetup()")}} {\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} PrinterSetup Demonstration}} {\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K}
 PrinterSetup()}} {\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Demos:205}} {\b\f3\fs28 PrinterSetup()
\par }\pard 
\par This macro displays the Printer Setup dialog from the File menu.
\par 
\par Use of the macro in secondary windows is discouraged.
\par 
\par \pard \intbl {\b Execute Button:\cell }Brings up the printer setup dialog box.\cell \pard \intbl \row \pard \keepn \page {\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} RegisterRoutine_Topic}} {\fs16\up6 !{\footnote \pard\plain \s245 
\f4\fs20 {\fs16\up6 !} EnableButton("Execute_Button");ChangeButtonBinding("Execute_Button","MessageBeep(0)")}} {\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} RegisterRoutine Demonstration}} {\fs16\up6 K{\footnote \pard\plain \s245 
\f4\fs20 {\fs16\up6 K} RegisterRoutine();DLL;}} {\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Demos:210}} {\b\f3\fs28 RegisterRoutine(}{\f3 "DLL-name", "function-name", "format-spec"}{\b\f3\fs28 )
\par }\pard 
\par Special Note:  This macro {\b MUST }appear in the [CONFIG] section of the help project file.
\par 
\par This macro registers a function within a DLL with WinHelp. Registered functions can be used in macro footnotes within topic files, or in the [CONFIG] section of the project file, the same as standard Help macros.
\par 
\par \trowd \trgaph108\trleft-108 \cellx2052\cellx7812\pard \intbl {\b\fs28 Parameter\cell Description\cell }\pard \intbl {\b\fs28 \row }\trowd \trgaph108\trleft-108 \cellx2052\cellx7812\pard \intbl DLL-name\cell 
The filename of the DLL being called. The filename must appear in quotation marks.  If WinHelp cannot find the DLL, it displays an error message and does not perform the call.
\par \cell \pard \intbl \row \pard \intbl function-name\cell The function executed in the designated DLL.
\par \cell \pard \intbl \row \trowd \trgaph108\trleft-108 \cellx2052\cellx7812\pard \intbl format-spec\cell 
A string specifying the formats of parameters passed to the function. Characters in the string represent C parameter types: "U" for unsigned long, "I" for int, or "S" for string (far char *). WinHelp makes sure these formats match the parameter types spec
ified in the function prototype.\cell \pard \intbl \row \pard 
\par \trowd \trgaph108\trleft-108 \cellx2052\cellx7812\pard \intbl {\b Execute Button:\cell }Executes the MessageBeep API.  The RegisterRoutine macro for this API can be found in the [CONFIG] section of the MACROHLP.HPJ source file.\cell \pard \intbl \row 
\pard \keepn \page {\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} SaveMark_Topic}} {\fs16\up6 !{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 !} EnableButton("Execute_Button");Chan
geButtonBinding("Execute_Button","SaveMark(`Test_Mark')")}} {\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} SaveMark Demonstration}K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K}
 SaveMark();GotoMark();DeleteMark();IsMark();IfThen();IfThenElse();Not();Mark}+{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Demos:215}} {\b\f3\fs28 SaveMark(}{\f3 "marker-text"}{\b\f3\fs28 )
\par }\pard 
\par This macro saves the location of the currently displayed topic and file and associates a text marker with that location. The {\uldb GotoMark}{\v GotoMark_Topic} macro can then be used to jump to this location.
\par 
\par \trowd \trgaph108\trleft-108 \cellx2052\cellx7812\pard \intbl {\b\fs28 Parameter\cell Description\cell }\pard \intbl {\b\fs28 \row }\trowd \trgaph108\trleft-108 \cellx2052\cellx7812\pard \intbl marker-text\cell 
Text used to identify the topic location. This text must appear in quotation marks, andit must be unique. If the same text is used for more than one marker, the most recently entered marker is used.\cell \pard \intbl \row \pard 
\par In addition to {\uldb GotoMark}{\v GotoMark_Topic}, WinHelp offers the following other macros for use with text markers:
\par 
\par \pard \fi-288\li720\tx720 -\tab {\uldb DeleteMark}{\v DeleteMark_Topic} removes any defined marker.
\par -\tab {\uldb IsMark}{\v\uldb IsMark_Topic} tests whether or not a given marker has been set in the Help file. Not negates the result of this text.
\par -\tab {\uldb IfThen}{\v IfThen_Topic} and {\uldb IfThenElse}{\v IfThenElse_Topic} run one or more Help macros if a given marker has been set. These use the {\uldb IsMark}{\v\uldb IsMark_Topic} (and optional {\uldb Not}{\v Not_Topic}
) macro to test whether the marker is set.
\par \pard 
\par Text markers are not saved if the user exits and then restarts WinHelp.
\par 
\par \trowd \trgaph108\trleft-108 \cellx2052\cellx7812\pard \intbl {\b Execute Button:\cell }Creates a mark, used in demonstrating the other macros that are dependant on marks\cell \pard \intbl \row \pard \keepn \page {\fs16\up6 #{\footnote \pard\plain \s245 
\f4\fs20 {\fs16\up6 #} Search_Topic}} {\fs16\up6 !{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 !} EnableButton("Execute_Button");ChangeButtonBinding("Execute_Button","Search()")}} {\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $}
 Search Demonstration}} {\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} Search()}} {\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Demos:220}} {\b\f3\fs28 Search()
\par }\pard 
\par This macro displays the dialog for the Search button, which allows users to search for topics using keywords defined in K footnotes.
\par 
\par WinHelp ignores this macro if it is executed in a secondary window.
\par 
\par \pard \intbl {\b Execute Button:\cell }Brings up the Search Dialog box.\cell \pard \intbl \row \pard 
\par }