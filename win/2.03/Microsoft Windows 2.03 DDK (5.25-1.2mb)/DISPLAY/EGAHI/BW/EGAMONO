#   Window's Sample Display Drivers.
#
#       This MAKE file will make the EGA High-Resolution monochrome display
#       driver.  The sources from this driver are especially useful to 
#       high-resolution display driver writers since they can "borrow" many
#       of the routines included herein as algorithms for doing required
#       functions such as monochrome memory STRBLTs, BITBLTs, OUTPUTs,
#       SCANLRs, PIXELs, etc.  The EGA High-Resolution monochrome driver
#       is especially well suited to this functionality since it is just
#       a flat, non-interlaced, one-plane bitmap.
#
#   Requirements:
#
#       MASM 5.00 or greater with the environment variable INCLUDE set to
#       the directories containing CMACROS.INC, GDIDEFS.INC, and WINDEFS.INC.
#
#


#   Options:
#
#	The command line may define options to MASM by defining the OPT
#	macro.	By defining the OPT parameter in the make file, any
#	possible interaction with an environment definition is avoided.

    OPT =				    #NOP the options feature




#   Define the default assemble command.  This command could actually
#   be overridden from the command line, but shouldn't be.

    ASM = masm -z-t-n-b63 $(OPT)



#   Define the default inference rules.  These rules apply whenever the
# object file depends only on the source file.  If there are other 
# dependencies (such as other include files), then you must repeat the
# inference rule within the dependencies area (for example, see BITBLT).

    .asm.obj:
	$(ASM) $**,$@;


#   Define the dependencies

inquire.obj:	inquire.asm

setmode.obj:	setmode.asm

enable.obj:	enable.asm

disable.obj:	disable.asm

chkstk.obj:	chkstk.asm

cursors.obj:	cursors.asm

control.obj:	control.asm

fb.obj: 	fb.asm

charwdth.obj:   charwdth.asm

hidither.obj:   hidither.asm

sswitch.obj:	sswitch.asm

robject.obj:	robject.asm

enum.obj:	enum.asm

colorinf.obj:   colorinf.asm

pixel.obj:	pixel.asm

cblt.obj:       cblt.asm            \
                genlocal.blt        \
                genconst.blt        \
                gendata.blt         \
                ropdefs.blt         \
                roptable.blt        \
                clrlocal.blt        \
                clrconst.blt        \
                clrdata.blt         \
                devlocal.blt        \
                devconst.blt        \
                devdata.blt
		$(ASM) $*;

egainit.obj:    egainit.asm

output.obj:	output.asm

scanlr.obj:	scanlr.asm

scanline.obj:	scanline.asm

polyline.obj:	polyline.asm polyline.inc plylocal.inc
		$(ASM) $*;

polybitm.obj:	polybitm.asm polyline.inc plylocal.inc polyline.mac
		$(ASM) $*;

polystyl.obj:	polystyl.asm polyline.inc plylocal.inc polyline.mac
		$(ASM) $*;

strblt.obj:     strblt.asm   strblt.inc
                $(ASM) $*;

buildstr.obj:   buildstr.asm strblt.inc
		$(ASM) $*;

smartfix.obj:   smartfix.asm strblt.inc
		$(ASM) $*;

smartpro.obj:   smartpro.asm strblt.inc
		$(ASM) $*;

ssb.obj:	ssb.asm

3xswitch.obj:	3xswitch.asm

bitblt.obj:     bitblt.asm              \
                genlocal.blt            \
                genconst.blt            \
                gendata.blt             \
                ropdefs.blt             \
                roptable.blt            \
                clrlocal.blt            \
                clrconst.blt            \
                clrdata.blt             \
                pdevice.blt             \
                pattern.blt             \
                copydev.blt             \
                devlocal.blt            \
                devconst.blt            \
                computey.blt            \
                special.blt             \
                exit.blt                \
                cursor.inc
        $(ASM) $*,$@;

cursor.obj:     cursor.asm egamemd.inc cursor.inc
    $(ASM) $*;

egahibw.obj:	egahibw.asm

egahibw.drv:             egahibw.def egahibw.lnk egahibw.res    \
		         egahibw.obj	       cursor.obj	\
		         bitblt.obj	       3xswitch.obj	\
		         cblt.obj 	       scanlr.obj	\
		         pixel.obj	       polystyl.obj	\
		         output.obj	       polyline.obj	\
		         polybitm.obj				\
		         strblt.obj	       buildstr.obj	\
		         smartfix.obj	       smartpro.obj	\
		         scanline.obj				\
		         ssb.obj	       egainit.obj	\
		         robject.obj	       colorinf.obj	\
		         enum.obj				\
                         control.obj           cursors.obj      \
                         inquire.obj           setmode.obj      \
                         hidither.obj          disable.obj      \
                         enable.obj            chkstk.obj       \
                         charwdth.obj          fb.obj           \
                         sswitch.obj
    link @egahibw.lnk
    rc egahibw.res egahibw.drv
    copy egahibw.map display.map
    mapsym display 
    del egahibw.map
    del display.map
